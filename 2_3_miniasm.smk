#  ////////*                                              
#         *///////////                                    
# //////////*   ////////////                              
#           ,/////////////////                            
# /////////////////////////////    ./////                 
#            //////////////////   ////// .///             
#     *///////////////////////// .//////.     ///         
#                 //////////////.  */////,*////  .//      
#                   /////////////.     ,/////  ,///* //   
#                     /////////////       /////      ,/*, 
#                      .//////////////.  ///////          
#                         //////////////////////          
#                             ,/////,*/////////           
#                               //////////////            
#                            ///////////////              
#                           /////////////                 
#                         ,/////////*                     
#                    .////////.                           

# This SnakeMake file contains the rule to run miniasm
# Project: longread simulation study
# Description: perform de novo assembly on the simulated reads generated by PBSIM3. 
#           The datasets have varying the readlength, sequencing depth and error rate
# Author: Paula Uittenbogaard
# Date: 11-04-2025

if config['method'] == "ONT":
    miniasm_in_dir = pbsim_dir
elif config['method'] == "HiFi":
    miniasm_in_dir = ccs_dir

rule minimap2_overlapper:
    input: 
        f"{miniasm_in_dir}/{prefix}_0001.fq.gz"
    output:
        f"{miniasm_dir}/{prefix}.paf.gz"
    shell:
        """
        minimap2 -x ava-ont -t8 {input} {input} | gzip -1 > {output}
        """

rule miniasm:
    input:
        fq = f"{miniasm_in_dir}/{prefix}_0001.fq.gz",
        paf = f"{miniasm_dir}/{prefix}.paf.gz"
    output:
        f"{miniasm_dir}/{prefix}.gfa"
    log:
        f"{miniasm_dir}/{prefix}.miniasm.log"
    shell:
        """
        miniasm -f {input.fq} {input.paf} > {output} 2> {log}
        """

rule miniasm_to_fasta:
    input:
        f"{miniasm_dir}/{prefix}.gfa"
    output:
        f"{miniasm_dir}/{prefix}.contigs.fasta"
    shell:
        """
        awk '/^S/{{print ">"$2;print $3}}' {input} > {output}
        """