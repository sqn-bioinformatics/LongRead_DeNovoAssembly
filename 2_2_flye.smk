#  ////////*                                              
#         *///////////                                    
# //////////*   ////////////                              
#           ,/////////////////                            
# /////////////////////////////    ./////                 
#            //////////////////   ////// .///             
#     *///////////////////////// .//////.     ///         
#                 //////////////.  */////,*////  .//      
#                   /////////////.     ,/////  ,///* //   
#                     /////////////       /////      ,/*, 
#                      .//////////////.  ///////          
#                         //////////////////////          
#                             ,/////,*/////////           
#                               //////////////            
#                            ///////////////              
#                           /////////////                 
#                         ,/////////*                     
#                    .////////.                           

# This SnakeMake file contains the rule to run canu
# Project: longread simulation study
# Description: perform de novo assembly on the simulated reads generated by PBSIM3. 
#           The datasets have varying the readlength, sequencing depth and error rate
# Author: Paula Uittenbogaard
# Date: 28-03-2025

#if config['method'] == "ONT":
 #   flye_in_dir = pbsim_dir
#elif config['method'] == "HiFi":
 #   flye_in_dir = ccs_dir

rule flye:
    input: 
        f"{pbsim_dir}/{prefix}_0001.fq.gz"
    output:
        f"{flye_dir}/assembly.fasta",
        f"{flye_dir}/assembly_graph.gfa",
        f"{flye_dir}/assembly_graph.gv",
        f"{flye_dir}/flye.log"
    params:
        outdir = f"{flye_dir}"
    shell:
        """
        flye --nano-raw {input} \
             --out-dir {params.outdir}
        """

rule rename_output_flye:
    input:
        fasta = f"{flye_dir}/assembly.fasta",
        gfa = f"{flye_dir}/assembly_graph.gfa",
        gv = f"{flye_dir}/assembly_graph.gv",
        log = f"{flye_dir}/flye.log"
    output:
        fasta = f"{flye_dir}/{prefix}.contigs.fasta",
        gfa = f"{flye_dir}/{prefix}.graph.gfa",
        gv = f"{flye_dir}/{prefix}.graph.gv",
        log = f"{flye_dir}/{prefix}.log"
    shell:
        """
        mv {input.fasta} {output.fasta}
        mv {input.gfa} {output.gfa}
        mv {input.gv} {output.gv}
        mv {input.log} {output.log}
        """